# Generated by Django 4.2 on 2023-05-17 03:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80, unique=True)),
                ("description", models.CharField(max_length=80, null=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=30, unique=True)),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.SmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Ageclass",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Age class")),
                ("abbr", models.CharField(max_length=50, verbose_name="Abbreviation")),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "age classes",
                "db_table": "age_class",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Bodypart",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=191, unique=True, verbose_name="Bodypart name"
                    ),
                ),
                ("expand_in_tree", models.BooleanField(default=False)),
                ("tree_root", models.BooleanField(default=False)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "parent",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.bodypart",
                        verbose_name="Parent Bodypart",
                    ),
                ),
            ],
            options={
                "db_table": "bodypart",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Captive",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("captive", "captive"),
                            ("wild-caught", "wild-caught"),
                            ("probably captive", "probably captive"),
                            ("unknown", "unknown"),
                        ],
                        max_length=16,
                        verbose_name="Captive or wild-caught",
                    ),
                ),
                (
                    "abbr",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="Abbreviation"
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "captive",
                "db_table": "captive",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Continent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Africa", "Africa"),
                            ("Asia", "Asia"),
                            ("Europe", "Europe"),
                            ("Australia", "Australia"),
                            ("North America", "North America"),
                            ("South America", "South America"),
                            ("Unknown", "Unknown"),
                        ],
                        max_length=32,
                        unique=True,
                        verbose_name="Continent name",
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "continent",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default=10000, max_length=191, verbose_name="Country name"
                    ),
                ),
                (
                    "abbr",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        unique=True,
                        verbose_name="Abbreviation",
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "countries",
                "db_table": "country",
                "ordering": ["name"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Datatype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "data_table",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("scalar", "scalar"),
                            ("data3d", "3D data"),
                            ("external", "external"),
                        ],
                        max_length=32,
                        verbose_name="Data type",
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "datatype",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "device",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Fossil",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=16, verbose_name="Fossil or Extant"),
                ),
                ("abbr", models.CharField(max_length=2, verbose_name="Abbreviation")),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Fossil or Extant",
                "verbose_name_plural": "Fossil or Extant",
                "db_table": "fossil",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Institute",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "abbr",
                    models.CharField(
                        blank=True, max_length=8, null=True, verbose_name="Abbreviation"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Institute")),
                (
                    "institute_department",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Department"
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "institute",
                "ordering": ["name"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Laterality",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("none", "none"),
                            ("transverse", "transverse"),
                            ("median", "median"),
                            ("right", "right"),
                            ("left", "left"),
                            ("unknown", "unknown"),
                        ],
                        max_length=255,
                    ),
                ),
                ("abbr", models.CharField(max_length=1, verbose_name="Abbreviation")),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "laterality",
                "db_table": "laterality",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Locality",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=191, verbose_name="Locality")),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("site_unit", models.CharField(blank=True, max_length=255, null=True)),
                ("plus_minus", models.FloatField(blank=True, null=True)),
                ("age", models.FloatField(blank=True, null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "continent",
                    models.ForeignKey(
                        default=7,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        to="primo.continent",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        default=10000,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        to="primo.country",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "localities",
                "db_table": "locality",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Observer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=191, unique=True)),
                (
                    "initials",
                    models.CharField(blank=True, max_length=4, null=True, unique=True),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "observer",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Original",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[("original", "original"), ("cast", "cast")],
                        max_length=16,
                        verbose_name="Type",
                    ),
                ),
                (
                    "abbr",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="Abbreviation"
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "original",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Protocol",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Protocol label"
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "protocol",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="QueryWizardQuery",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_table", models.CharField(blank=True, max_length=20, null=True)),
                ("query", models.TextField(blank=True, null=True)),
                ("query_suffix", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "query_wizard_query",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Rank",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Rank name"
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "rank",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Sex",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("male", "male"),
                            ("female", "female"),
                            ("male?", "male?"),
                            ("female?", "female?"),
                            ("possibly male", "possibly male"),
                            ("possibly female", "possibly female"),
                            ("unknown", "unknown"),
                        ],
                        max_length=16,
                        verbose_name="Sex",
                    ),
                ),
                (
                    "abbr",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="Abbreviation"
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "sexes",
                "db_table": "sex",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="SpecimenType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=16, verbose_name="Name")),
                (
                    "abbr",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="Abbreviation"
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "specimen type",
                "db_table": "specimen_type",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Variable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=32, null=True)),
                ("name", models.CharField(max_length=255)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "datatype",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.datatype"
                    ),
                ),
                (
                    "laterality",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.laterality",
                    ),
                ),
                (
                    "paired_with",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.variable",
                    ),
                ),
            ],
            options={
                "db_table": "variable",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Taxon",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Taxon name"
                    ),
                ),
                ("expand_in_tree", models.BooleanField(default=False)),
                ("tree_root", models.BooleanField(default=False)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "fossil",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.fossil"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.taxon",
                        verbose_name="Parent Taxon",
                    ),
                ),
                (
                    "rank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.rank"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "taxa",
                "db_table": "taxon",
                "ordering": ["name"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Specimen",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hypocode", models.CharField(blank=True, max_length=20)),
                (
                    "catalog_number",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                ("mass", models.IntegerField(default=0)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "age_class",
                    models.ForeignKey(
                        default=9,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.ageclass",
                    ),
                ),
                (
                    "captive",
                    models.ForeignKey(
                        default=9,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.captive",
                    ),
                ),
                (
                    "fossil",
                    models.ForeignKey(
                        default=9,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.fossil",
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        default=10000,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.institute",
                    ),
                ),
                (
                    "locality",
                    models.ForeignKey(
                        default=10000,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        to="primo.locality",
                    ),
                ),
                (
                    "sex",
                    models.ForeignKey(
                        default=9,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.sex",
                    ),
                ),
                (
                    "specimen_type",
                    models.ForeignKey(
                        default=7,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.specimentype",
                    ),
                ),
                (
                    "taxon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.taxon"
                    ),
                ),
            ],
            options={
                "db_table": "specimen",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("iteration", models.IntegerField(blank=True, null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                ("filename", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "group",
                    models.ForeignKey(
                        default=3,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.authgroup",
                    ),
                ),
                (
                    "observer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.observer"
                    ),
                ),
                (
                    "original",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="primo.original",
                        verbose_name="Original or Cast",
                    ),
                ),
                (
                    "protocol",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.protocol"
                    ),
                ),
                (
                    "specimen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.specimen"
                    ),
                ),
            ],
            options={
                "db_table": "session",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="QueryWizardTable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "filter_table_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("display_order", models.IntegerField(blank=True, null=True)),
                ("preselected", models.BooleanField(default=False)),
                (
                    "query_wizard_query",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tables",
                        to="primo.querywizardquery",
                    ),
                ),
            ],
            options={
                "db_table": "query_wizard_table",
                "managed": True,
            },
        ),
        migrations.AddField(
            model_name="institute",
            name="locality",
            field=models.ForeignKey(
                default=10000,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to="primo.locality",
            ),
        ),
        migrations.CreateModel(
            name="DataScalar",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.session"
                    ),
                ),
                (
                    "variable",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.variable"
                    ),
                ),
            ],
            options={
                "verbose_name": "scalar data",
                "verbose_name_plural": "scalar data",
                "db_table": "data_scalar",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Data3D",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("datindex", models.IntegerField(blank=True, null=True)),
                (
                    "x",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        default=9999.0,
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "y",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        default=9999.0,
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "z",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        default=9999.0,
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.session"
                    ),
                ),
                (
                    "variable",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.variable"
                    ),
                ),
            ],
            options={
                "verbose_name": "3D data",
                "verbose_name_plural": "3D data",
                "db_table": "data_3d",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="BodypartVariable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bodypart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.bodypart"
                    ),
                ),
                (
                    "variable",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.variable"
                    ),
                ),
            ],
            options={
                "verbose_name": "Bodypart-variable link",
                "db_table": "bodypart_variable",
                "ordering": ["id"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="primo.authuser"
                    ),
                ),
            ],
            options={
                "managed": True,
            },
        ),
    ]
